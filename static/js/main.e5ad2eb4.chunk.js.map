{"version":3,"sources":["friends-data.js","components/login/Login.js","components/Friend.js","components/friends-list/FriendsList.js","components/navbar/Navbar.js","components/homepage/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["FRIENDS_DATA","Login","props","state","username","password","validate","bind","hangleChangeOfUsername","hangleChangeOfPassword","$","on","this","addClass","val","removeClass","authenticate","e","setState","target","value","className","type","onChange","data-placeholder","onClick","Component","Friend","src","process","friend","name","phone","alt","FriendsList","map","key","toString","slice","Navbar","onSubmit","console","log","id","logout","Homepage","App","isLoggedIn","friendsData","alert","exact","path","render","Fragment","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5ad2eb4.chunk.js","sourcesContent":["export const FRIENDS_DATA = [\r\n    {\r\n        \"name\": \"Amaresh Khanavali\",\r\n        \"phone\": 9916030304,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Amaresh\",\r\n        \"phone\": 9538644513,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Ambi114\",\r\n        \"phone\": 8496886203,\r\n        \"address\": \"xyz\"\r\n    },\r\n    {\r\n        \"name\": \"Alam Bhasha\",\r\n        \"phone\": 9886441290,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Anil\",\r\n        \"phone\": 9019114202,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Arun\",\r\n        \"phone\": 8971317143,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Devaraj\",\r\n        \"phone\": 8050232182,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Shivaraj\",\r\n        \"phone\": 9902253358,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Suresh\",\r\n        \"phone\": 9535835373,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Gopal Yadav\",\r\n        \"phone\": 9008189325,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Govind (GGK)\",\r\n        \"phone\": 9916022772,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Mallu\",\r\n        \"phone\": 9663236108,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Shivu (Welding)\",\r\n        \"phone\": 9008439022,\r\n        \"address\": \"aBC\"\r\n    }\r\n]","import React, { Component } from 'react'\r\nimport './login.css';\r\nimport $ from 'jquery';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            username: '',\r\n            password: ''\r\n        }\r\n        this.validate = this.validate.bind(this);\r\n        this.hangleChangeOfUsername = this.hangleChangeOfUsername.bind(this);\r\n        this.hangleChangeOfPassword = this.hangleChangeOfPassword.bind(this);\r\n\r\n        $(() => {\r\n            $('.txtb input').on('focus', function () {\r\n                $(this).addClass('focus');\r\n            });\r\n            $('.txtb input').on('blur', function () {\r\n                if ($(this).val() === '')\r\n                    $(this).removeClass('focus');\r\n            });\r\n        })\r\n    }\r\n\r\n    validate() {\r\n        this.props.authenticate(this.state.username, this.state.password);\r\n    }\r\n\r\n    hangleChangeOfUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        })\r\n    }\r\n\r\n    hangleChangeOfPassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"login-form\">\r\n                    <h1>Login</h1>\r\n                    <div className=\"txtb\">\r\n                        <input type=\"text\" onChange={this.hangleChangeOfUsername} value={this.state.username}></input>\r\n                        <span data-placeholder=\"Username\"></span>\r\n                    </div>\r\n                    <div className=\"txtb\">\r\n                        <input type=\"password\" onChange={this.hangleChangeOfPassword} value={this.state.password}></input>\r\n                        <span data-placeholder=\"Password\"></span>\r\n                    </div>\r\n                    <input type=\"submit\" className=\"logbtn\" value=\"Login\" onClick={this.validate}></input>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './friends.css'\r\n\r\nexport default function Friend(props) {\r\n    return (\r\n        <div className=\"friend-card\">\r\n            <div>\r\n                <img className=\"friend-image\" src={process.env.PUBLIC_URL + '/photos_maski/' + props.friend.name + '-' + props.friend.phone + '.jpg'} alt=\"\"/>\r\n            </div>\r\n            <div className=\"details\">\r\n                {props.friend.name} <br/>\r\n                {props.friend.phone}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { FRIENDS_DATA } from '../../friends-data';\r\nimport Friend from '../Friend';\r\nimport '../friends.css'\r\n\r\nconst listAllFriends = () => {\r\n    return FRIENDS_DATA.map(friend => {\r\n        return <Friend key={friend.phone.toString().slice(0,4)+friend.name} friend={friend}/>\r\n    })\r\n}\r\n\r\nconst FriendsList = () => {\r\n    return (\r\n        <div className=\"friends-list\">\r\n            {listAllFriends()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsList;","import React from 'react'\r\nimport './navbar.css'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"left-panel\">\r\n                <button className=\"myButton home\">Home <i className=\"fas fa-home\"></i></button>\r\n                {/* <button className=\"myButton high-school\">High School <i className=\"fas fa-chalkboard-teacher\"></i></button> */}\r\n            </div>\r\n            <div className=\"right-panel\">\r\n                <form onSubmit={() => console.log('preventdefault then update list')}>\r\n                    <input className=\"search-input\" type=\"text\" name=\"\" id=\"\" />\r\n                    <button className=\"search-button\" type=\"submit\">\r\n                        <i className=\"fas fa-search search-icon\"></i>\r\n                    </button>\r\n                </form>\r\n                <button className=\"myButton logout\" onClick={() => props.logout()}>\r\n                    Logout <i className=\"fas fa-sign-out-alt\"></i>\r\n                </button>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport FriendsList from '../friends-list/FriendsList';\r\nimport './homepage.css'\r\nimport Navbar from '../navbar/Navbar';\r\n\r\nexport default function Homepage(props) {\r\n    return (\r\n        <div className=\"main\">\r\n            <Navbar logout={props.logout}/>\r\n            <FriendsList />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\nimport { FRIENDS_DATA } from './friends-data';\nimport Login from './components/login/Login';\nimport Homepage from './components/homepage/Homepage';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      friendsData: FRIENDS_DATA\n    }\n    this.authenticate = this.authenticate.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  authenticate(username, password) {\n    if(username === 'friend' && password === 'HighSchool2006') {\n      this.setState({\n        isLoggedIn: true\n      });\n    } else {\n      alert('Invalid: Either username or/and password is wrong!');\n    }\n  }\n\n  logout() {\n    this.setState({\n      isLoggedIn: false\n    });\n  }\n\n  render() {\n    if(!this.state.isLoggedIn) {\n      return (\n        <Router>\n          <div>\n            <Route exact path=\"/friends_maski/\" render={props =>(\n              <React.Fragment>\n                <Login authenticate={this.authenticate}/>\n              </React.Fragment>\n            )} />\n          </div>\n        </Router>\n      )\n    } else {\n      return (\n        <div>\n          <Homepage logout={this.logout}/>\n        </div>\n      )\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}