{"version":3,"sources":["components/login/Login.js","containers/LoginContainer.js","components/navbar/Navbar.js","containers/NavContainer.js","components/Friend.js","components/friends-list/FriendsList.js","containers/FriendsListContainer.js","components/homepage/Homepage.js","components/MainPage.js","containers/MainContainer.js","App.js","friends-data.js","serviceWorker.js","index.js"],"names":["Login","props","state","username","password","authenticateUser","bind","$","on","this","addClass","val","removeClass","authenticate","document","querySelector","textContent","className","onSubmit","e","preventDefault","value","type","ref","node","required","data-placeholder","style","position","top","Component","connect","dispatch","Navbar","inputData","onLogout","onSearch","console","log","name","id","onClick","React","data","onInit","query","Friend","src","process","friend","phone","alt","FriendsList","map","key","toString","slice","listAllFriends","Homepage","NavContainer","FriendsListContainer","MainPage","isLoggedIn","LoginContainer","defaultState","visibilityFilter","filterData","action","filter","friend_detail","includes","toLowerCase","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","MainContainer","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.08aa242d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './login.css';\r\nimport $ from 'jquery';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            username: '',\r\n            password: ''\r\n        }\r\n\r\n        this.authenticateUser = this.authenticateUser.bind(this);\r\n\r\n        $(() => {\r\n            $('.txtb input').on('focus', function () {\r\n                $(this).addClass('focus');\r\n            });\r\n            $('.txtb input').on('blur', function () {\r\n                if ($(this).val() === '')\r\n                    $(this).removeClass('focus');\r\n            });\r\n        })\r\n    }\r\n\r\n    authenticateUser(username, password, authenticate) {\r\n        if (username === 'friend' && password === 'HighSchool2006') {\r\n            authenticate(username, password);\r\n        }\r\n        else {\r\n            document.querySelector('.login-failed').textContent = \"Invalid: Either username or/and password is wrong!\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let username, password;\r\n        const authenticate = this.props.authenticate;\r\n        return (\r\n            <div>\r\n                <form className=\"login-form\" onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        this.authenticateUser(username.value, password.value, authenticate)\r\n                    }}>\r\n                    <h1 className=\"login-heading\">Login</h1>\r\n                    <span className=\"login-failed\"></span>\r\n                    <div className=\"txtb\">\r\n                        <input type=\"text\" ref={node => username = node} required></input>\r\n                        <span data-placeholder=\"Username\"></span>\r\n                    </div>\r\n                    <div className=\"txtb\">\r\n                        <input type=\"password\" ref={node => password = node} required></input>\r\n                        <span data-placeholder=\"Password\"></span>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"logbtn\">\r\n                        <span style={{position: \"relative\", top: \"-2px\"}}>Get in</span> <i className=\"fas fa-sign-in-alt\"></i>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport Login from \"../components/login/Login\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\n// const authenticate = (username, password, dispatch) => {\r\n//     if (!username && !password) {\r\n//         document.querySelector('.login-failed').textContent = \"Please enter username and password\";\r\n//         return;\r\n//     }\r\n//     if (username === 'friend' && password === 'HighSchool2006') {\r\n\r\n//     } else {\r\n//         document.querySelector('.login-failed').textContent = \"Invalid: Either username or/and password is wrong!\";\r\n//     }\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        authenticate: (username, password) => dispatch({ type: 'ON_LOG_IN', username: username, password: password })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\r\nimport './navbar.css'\r\n\r\nexport default class Navbar extends React.Component {\r\n    render() {\r\n        const { onLogout, onSearch} = this.props;\r\n        let inputData;\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <div className=\"left-panel\">\r\n                    <button className=\"myButton home\">Home <i className=\"fas fa-home\"></i></button>\r\n                    {/* <button className=\"myButton high-school\">High School <i className=\"fas fa-chalkboard-teacher\"></i></button> */}\r\n                </div>\r\n                <div className=\"right-panel\">\r\n                    <form onSubmit={() => console.log('preventdefault then update list')}>\r\n                        <input className=\"search-input\" type=\"text\" name=\"\" id=\"\" ref={node => inputData = node} />\r\n                        <button className=\"search-button\" type=\"submit\" onClick={(e) => { e.preventDefault(); onSearch(inputData.value)}}>\r\n                            <i className=\"fas fa-search search-icon\"></i>\r\n                        </button>\r\n                    </form>\r\n                    <button className=\"myButton logout\" onClick={() => onLogout()}>\r\n                        Logout <i className=\"fas fa-sign-out-alt\"></i>\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport Navbar from '../components/navbar/Navbar';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.data,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onInit: () => dispatch({ type: 'FETCH_FRIENDS_LIST' }),\r\n        onSearch: (query) => { \r\n            if(!query) {\r\n                dispatch({ type: 'RESET_INITIAL_DATA' })\r\n            } else {\r\n                dispatch({ type: 'FETCH_SEARCH_RESULT', query: query })\r\n            }\r\n        },\r\n        onLogout: () => dispatch({ type: 'LOG_OUT' })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","import React from 'react'\r\nimport './friends.css'\r\n\r\nexport default function Friend(props) {\r\n    return (\r\n        <div className=\"friend-card\">\r\n            <div>\r\n                <img className=\"friend-image\" src={process.env.PUBLIC_URL + '/photos_maski/' + props.friend.name + '-' + props.friend.phone + '.jpg'} alt=\"\"/>\r\n            </div>\r\n            <div className=\"details\">\r\n                {props.friend.name} <br/>\r\n                {props.friend.phone}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Friend from '../Friend';\r\nimport '../friends.css'\r\n\r\nconst listAllFriends = (data) => {\r\n    return data.map(friend => {\r\n        return <Friend key={friend.phone.toString().slice(0,4)+friend.name} friend={friend}/>\r\n    })\r\n}\r\n\r\nconst FriendsList = (props) => {\r\n    const {data} = props;\r\n    return (\r\n        <div className=\"friends-list\">\r\n            {listAllFriends(data)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsList;","import { connect } from 'react-redux';\r\nimport FriendsList from '../components/friends-list/FriendsList';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.data\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = () => {\r\n//     return {\r\n//         onLoad: () => dispatchEvent({ type: 'FETCH_SEARCH_RESULT' })\r\n//     }\r\n// }\r\nexport default connect(mapStateToProps)(FriendsList);","import React from 'react'\r\nimport './homepage.css'\r\nimport NavContainer from '../../containers/NavContainer';\r\nimport FriendsListContainer from '../../containers/FriendsListContainer';\r\n\r\nexport default function Homepage(props) {\r\n    return (\r\n        <div className=\"main\">\r\n            <NavContainer />\r\n            <FriendsListContainer />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport LoginContainer from '../containers/LoginContainer';\r\nimport Homepage from './homepage/Homepage';\r\n\r\nexport default class MainPage extends Component {\r\n    render() {\r\n        const isLoggedIn = this.props.isLoggedIn;\r\n        if (!isLoggedIn) {\r\n            return (\r\n                <div>\r\n                    <LoginContainer />\r\n                </div>\r\n            )\r\n        } \r\n        else {\r\n            return (\r\n                <div>\r\n                    <Homepage />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport MainPage from \"../components/MainPage\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.isLoggedIn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainPage);","import React, { Component } from 'react'\nimport { FRIENDS_DATA } from './friends-data';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport MainContainer from './containers/MainContainer';\n\nconst defaultState = {\n  isLoggedIn: false,\n  data: [...FRIENDS_DATA],\n  visibilityFilter: 'SHOW_ALL'\n}\n\nconst filterData = (defaultState, action) => {\n  return [...defaultState.data.filter(friend_detail => {\n    return (friend_detail.phone.toString().includes(action.query) || friend_detail.name.toLowerCase().includes(action.query))\n  })]\n}\n\nconst reducer = (state=defaultState, action) => {\n  switch (action.type) {\n    case 'ON_LOG_IN': return { ...defaultState, isLoggedIn: true }\n    case 'FETCH_SEARCH_RESULT':\n      return {\n        isLoggedIn: true,\n        data: filterData(defaultState, action),\n        visibilityFilter: 'SEARCH_RESULTS'\n      }\n    case 'RESET_INITIAL_DATA': return { ...defaultState, isLoggedIn:  true };\n    case 'LOG_OUT':\n      return {\n        ...state, isLoggedIn: false\n      }\n    default: return state\n  }\n}\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <MainContainer />\n      </Provider>\n    )\n  }\n}\n","export const FRIENDS_DATA = [\r\n    {\r\n        \"name\": \"Amaresh Khanavali\",\r\n        \"phone\": 9916030304,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Amaresh\",\r\n        \"phone\": 9538644513,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Ambi114\",\r\n        \"phone\": 8496886203,\r\n        \"address\": \"xyz\"\r\n    },\r\n    {\r\n        \"name\": \"Alam Bhasha\",\r\n        \"phone\": 9886441290,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Anil\",\r\n        \"phone\": 9019114202,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Arun\",\r\n        \"phone\": 8971317143,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Devaraj\",\r\n        \"phone\": 8050232182,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Shivaraj\",\r\n        \"phone\": 9902253358,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Suresh\",\r\n        \"phone\": 9535835373,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Gopal Yadav\",\r\n        \"phone\": 9008189325,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Govind (GGK)\",\r\n        \"phone\": 9916022772,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Mallu\",\r\n        \"phone\": 9663236108,\r\n        \"address\": \"aBC\"\r\n    },\r\n    {\r\n        \"name\": \"Shivu (Welding)\",\r\n        \"phone\": 9008439022,\r\n        \"address\": \"aBC\"\r\n    }\r\n]","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}